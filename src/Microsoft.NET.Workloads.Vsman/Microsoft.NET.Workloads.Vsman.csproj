<Project Sdk="Microsoft.Build.NoTargets">

  <PropertyGroup>
    <TargetFramework>$(NetCurrent)</TargetFramework>
  </PropertyGroup>

  <!-- This acquires the workloads, creates the VSMAN file for each, and readies the drop for upload. -->
  <Target Name="BuildVsmanProj" AfterTargets="Build" Condition="'$(CreateVSInsertion)' == 'true'">

    <PropertyGroup>
      <WorkloadDirectory Condition="'$(WorkloadDirectory)' == ''">$(ArtifactsDir)workloads\</WorkloadDirectory>
    </PropertyGroup>

    <!-- This downloads the workloads using DARC for LOCAL BUILD ONLY. In CI, we need to pass PATs to this, so it runs in Azure Pipelines only (not through MSBuild). For local builds, some preconfiguration is necessary. -->
    <Exec Condition="'$(TF_BUILD)' != 'true'" Command="powershell -NonInteractive -NoLogo -NoProfile -Command &quot;. $(RepositoryEngineeringDir)download-workloads.ps1 -workloadPath '$(WorkloadDirectory)'&quot;" />

    <!-- Using the downloaded workloads, this creates the VS drops to upload for VS insertion. It builds the Microsoft.NET.Workloads.Vsman.vsmanproj per workload ZIP, which creates the appropriate VSMAN file. -->
    <Exec Command="powershell -NonInteractive -NoLogo -NoProfile -Command &quot;. $(RepositoryEngineeringDir)create-workload-drops.ps1 -workloadPath '$(WorkloadDirectory)' -msBuildToolsPath '$(MSBuildToolsPath)'&quot;" />

  </Target>

</Project>