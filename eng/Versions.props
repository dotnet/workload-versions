<!-- Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE.md file in the project root for more information. -->
<Project>
  <!-- Arcade features -->
  <PropertyGroup>
    <UsingToolNetFrameworkReferenceAssemblies>true</UsingToolNetFrameworkReferenceAssemblies>
  </PropertyGroup>
  <PropertyGroup>
    <VersionMajor>9</VersionMajor>
    <VersionMinor>0</VersionMinor>
    <VersionSDKMinor>1</VersionSDKMinor>
    <VersionFeature>00</VersionFeature>
    <VersionPrefix>$(VersionMajor).$(VersionMinor).$(VersionSDKMinor)$(VersionFeature)</VersionPrefix>
    <MajorMinorVersion>$(VersionMajor).$(VersionMinor)</MajorMinorVersion>
    <CliProductBandVersion>$(MajorMinorVersion).$(VersionSDKMinor)</CliProductBandVersion>
    <SDKFeatureBand>$(CliProductBandVersion)00</SDKFeatureBand>
    <!-- Enable to remove prerelease label. -->
    <StabilizePackageVersion Condition="'$(StabilizePackageVersion)' == ''">false</StabilizePackageVersion>
    <DotNetFinalVersionKind Condition="'$(StabilizePackageVersion)' == 'true'">release</DotNetFinalVersionKind>
    <!-- Calculate prerelease label -->
    <PreReleaseVersionLabel Condition="'$(StabilizePackageVersion)' != 'true'">alpha</PreReleaseVersionLabel>
    <PreReleaseVersionLabel Condition="'$(StabilizePackageVersion)' == 'true' and '$(VersionFeature)' == '00'">rtm</PreReleaseVersionLabel>
    <PreReleaseVersionLabel Condition="'$(StabilizePackageVersion)' == 'true' and '$(VersionFeature)' != '00'">servicing</PreReleaseVersionLabel>
    <PreReleaseVersionIteration Condition="'$(StabilizePackageVersion)' != 'true'">1</PreReleaseVersionIteration>
  </PropertyGroup>
  <!-- Restore feeds -->
  <PropertyGroup Label="Restore feeds">
    <!-- In an orchestrated build, this may be overridden to other Azure feeds. -->
    <DotNetAssetRootUrl Condition="'$(DotNetAssetRootUrl)'==''">https://dotnetbuilds.blob.core.windows.net/public/</DotNetAssetRootUrl>
    <DotNetPrivateAssetRootUrl Condition="'$(DotNetPrivateAssetRootUrl)'==''">https://dotnetclimsrc.blob.core.windows.net/dotnet/</DotNetPrivateAssetRootUrl>
  </PropertyGroup>
  <PropertyGroup>
    <MicrosoftDotNetBuildTasksInstallersVersion>9.0.0-beta.23552.3</MicrosoftDotNetBuildTasksInstallersVersion>
    <MicrosoftDotNetBuildTasksWorkloadsPackageVersion>9.0.0-beta.23552.3</MicrosoftDotNetBuildTasksWorkloadsPackageVersion>
  </PropertyGroup>
  <PropertyGroup>
    <WixPackageVersion>1.0.0-v3.14.0.5722</WixPackageVersion>
    <SwixPackageVersion>1.1.87-gba258badda</SwixPackageVersion>
  </PropertyGroup>
  <PropertyGroup Label="EmscriptenWorkloads">
    <!-- Workloads from dotnet/emsdk -->
    <MicrosoftNETWorkloadEmscriptenCurrentManifest90100TransportPackageVersion>9.0.0-alpha.1.24053.1</MicrosoftNETWorkloadEmscriptenCurrentManifest90100TransportPackageVersion>
    <EmscriptenWorkloadManifestVersion>$(MicrosoftNETWorkloadEmscriptenCurrentManifest90100TransportPackageVersion)</EmscriptenWorkloadManifestVersion>
    <!-- emsdk workload prerelease version band must match the emsdk feature band -->
    <EmscriptenWorkloadFeatureBand>8.0.100$([System.Text.RegularExpressions.Regex]::Match($(EmscriptenWorkloadManifestVersion), `-[A-z]*[\.]*\d*`))</EmscriptenWorkloadFeatureBand>
  </PropertyGroup>
  <PropertyGroup Label="MauiWorkloads">
    <MauiFeatureBand>8.0.100</MauiFeatureBand>
    <MauiWorkloadManifestVersion>8.0.3</MauiWorkloadManifestVersion>
    <XamarinAndroidWorkloadManifestVersion>34.0.43</XamarinAndroidWorkloadManifestVersion>
    <XamarinIOSWorkloadManifestVersion>17.0.8478</XamarinIOSWorkloadManifestVersion>
    <XamarinMacCatalystWorkloadManifestVersion>17.0.8478</XamarinMacCatalystWorkloadManifestVersion>
    <XamarinMacOSWorkloadManifestVersion>14.0.8478</XamarinMacOSWorkloadManifestVersion>
    <XamarinTvOSWorkloadManifestVersion>17.0.8478</XamarinTvOSWorkloadManifestVersion>
  </PropertyGroup>
  <PropertyGroup Label="MonoWorkloads">
    <MicrosoftNETCoreAppRefPackageVersion>9.0.0-alpha.1.24066.15</MicrosoftNETCoreAppRefPackageVersion>
    <!-- Workloads from dotnet/runtime use MicrosoftNETCoreAppRefPackageVersion because it has a stable name that does not include the full feature band -->
    <MonoWorkloadManifestVersion>$(MicrosoftNETCoreAppRefPackageVersion)</MonoWorkloadManifestVersion>
    <!-- mono workload prerelease version band must match the runtime feature band -->
    <MonoWorkloadFeatureBand>8.0.100$([System.Text.RegularExpressions.Regex]::Match($(MonoWorkloadManifestVersion), `-[A-z]*[\.]*\d*`))</MonoWorkloadFeatureBand>
  </PropertyGroup>
  <PropertyGroup Label="AspireWorkloads">
    <AspireFeatureBand>8.0.100</AspireFeatureBand>
    <AspireWorkloadManifestVersion>8.0.0-preview.3.24060.4</AspireWorkloadManifestVersion>
  </PropertyGroup>
</Project>
